#!/bin/bash
REPO_PATH=$PWD
#PUB_PACKAGE_VERSION=$(npm run env | sed -n 's/^npm_package_version=//p')
#PUB_PACKAGE_NAME=$(npm run env | sed -n 's/^npm_package_name=//p')
# get last published npm version
#PUB_LAST_PACKAGE_VERSION=$(npm view $PUB_PACKAGE_NAME versions --json | sed -n '1h;1!{x;H;};${g;p;}' | tr '\n' ' ' | sed 's/[^0-9]*\([0-9.]*\).*/\1/')
echo "PUB_PACKAGE_VERSION = $PUB_PACKAGE_VERSION, PUB_DOC_PATH = $PUB_DOC_PATH, PUB_PATH = $PUB_PATH, PUB_BRANCH = $PUB_BRANCH"
echo "PUB_REPO_URL = $PUB_REPO_URL, PUB_USER = $PUB_USER, PUB_EMAIL = $PUB_EMAIL, PUB_MESSAGE = $PUB_MESSAGE"
# checkout
pushd $HOME
git clone --branch=$PUB_BRANCH $PUB_REPO_URL $PUB_PATH 2>&1 > /dev/null
cd $PUB_PATH
# recursively copy the latest docs to the root gh-pages
cp -r $PUB_DOC_PATH/* ./
# recursively copy the current docs to the version directory and root directory
mkdir -p ./$PUB_PACKAGE_VERSION
cp -r $PUB_DOC_PATH/* ./$PUB_PACKAGE_VERSION
# publish to github
echo "Publishing to $PUB_BRANCH for: $PUB_MESSAGE"
git add .
git config user.name  $PUB_USER
git config user.email $PUB_EMAIL
git commit -m $PUB_MESSAGE
git push -fq origin $PUB_BRANCH 2>&1 > /dev/null
popd